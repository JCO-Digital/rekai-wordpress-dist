{
  "version": 3,
  "sources": ["../../src/js/admin.ts"],
  "sourcesContent": ["document.addEventListener(\"DOMContentLoaded\", () => {\n  let modeValue = \"\";\n\n  // Select all input elements with name=\"rekai_autocomplete_mode\".\n  document\n    .querySelectorAll('input[name=\"rekai_autocomplete_mode\"]')\n    .forEach((element) => {\n      // Add on select listener that calls changeAutocompleteMode with the value of the selected field.\n      if (element instanceof HTMLInputElement) {\n        if (element.checked) {\n          modeValue = element.value;\n        }\n        element.addEventListener(\"change\", () => {\n          changeAutocompleteMode(element.value);\n        });\n      }\n    });\n\n  changeAutocompleteMode(modeValue);\n\n  setTimeout(() => {\n    document.getElementById(\"rekai-selector-section\")?.classList.add(\"animate\");\n  }, 100);\n\n  // Select and loop over elements that have the \"data-toggle-hide\" attribute, and target the id equal to the value of the attribute.\n  document.querySelectorAll(\"[data-toggle-hide]\").forEach((element) => {\n    element.addEventListener(\"click\", () => {\n      const targetId = element.getAttribute(\"data-toggle-hide\");\n      if (targetId) {\n        const targetElement = document.getElementById(targetId);\n        if (targetElement instanceof HTMLInputElement) {\n          if (targetElement.type === \"text\") {\n            targetElement.type = \"password\";\n            element.classList.toggle(\"show\", true);\n          } else if (targetElement.type === \"password\") {\n            targetElement.type = \"text\";\n            element.classList.toggle(\"show\", false);\n          }\n        }\n      }\n    });\n  });\n});\n\nfunction changeAutocompleteMode(value: string) {\n  document\n    .getElementById(\"rekai-selector-section\")\n    ?.classList.toggle(\"show\", value === \"auto\");\n}\n"],
  "mappings": "MAAA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,IAAIA,EAAY,GAGhB,SACG,iBAAiB,uCAAuC,EACxD,QAASC,GAAY,CAEhBA,aAAmB,mBACjBA,EAAQ,UACVD,EAAYC,EAAQ,OAEtBA,EAAQ,iBAAiB,SAAU,IAAM,CACvCC,EAAuBD,EAAQ,KAAK,CACtC,CAAC,EAEL,CAAC,EAEHC,EAAuBF,CAAS,EAEhC,WAAW,IAAM,CACf,SAAS,eAAe,wBAAwB,GAAG,UAAU,IAAI,SAAS,CAC5E,EAAG,GAAG,EAGN,SAAS,iBAAiB,oBAAoB,EAAE,QAASC,GAAY,CACnEA,EAAQ,iBAAiB,QAAS,IAAM,CACtC,IAAME,EAAWF,EAAQ,aAAa,kBAAkB,EACxD,GAAIE,EAAU,CACZ,IAAMC,EAAgB,SAAS,eAAeD,CAAQ,EAClDC,aAAyB,mBACvBA,EAAc,OAAS,QACzBA,EAAc,KAAO,WACrBH,EAAQ,UAAU,OAAO,OAAQ,EAAI,GAC5BG,EAAc,OAAS,aAChCA,EAAc,KAAO,OACrBH,EAAQ,UAAU,OAAO,OAAQ,EAAK,GAG5C,CACF,CAAC,CACH,CAAC,CACH,CAAC,EAED,SAASC,EAAuBG,EAAe,CAC7C,SACG,eAAe,wBAAwB,GACtC,UAAU,OAAO,OAAQA,IAAU,MAAM,CAC/C",
  "names": ["modeValue", "element", "changeAutocompleteMode", "targetId", "targetElement", "value"]
}
